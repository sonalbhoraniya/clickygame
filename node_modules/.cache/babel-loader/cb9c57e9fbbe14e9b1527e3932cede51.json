{"ast":null,"code":"var _jsxFileName = \"/Users/bhoraniya/clickygame/clickygame/src/App.js\";\nimport React, { Component } from 'react'; //import logo from './logo.svg';\n\nimport './App.css';\nimport images from \"./images.json\";\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.imageShuffle = pictures => {\n      var random;\n      var x;\n\n      for (var i = pictures.length - 1; i > 0; i--) {\n        random = Math.floor(Math.random() * (i + 1));\n        x = pictures[i];\n        pictures[i] = pictures[random];\n        pictures[random] = x;\n      }\n\n      return pictures;\n    };\n\n    this.restart = () => {\n      this.setState({\n        score: 0,\n        imageClicked: [],\n        message: \"Oops! You've already clicked that one. Start again.\"\n      });\n    };\n\n    this.startGame = event => {\n      this.setState({\n        imageClicked: this.state.imageClicked.concat(event.target.id)\n      });\n\n      if (this.state.imageClicked.indexOf(event.target.id) === -1) {\n        var currentScore = this.state.score;\n        currentScore++;\n        var currentTopScore = this.state.topScore;\n\n        if (currentScore > currentTopScore) {\n          currentTopScore++;\n        }\n\n        this.setState({\n          topScore: currentTopScore,\n          score: currentScore,\n          message: \"Woohoo! You guessed correctly\"\n        });\n      } else {\n        this.restart();\n      }\n\n      this.imageShuffle(images);\n    };\n\n    this.state = {\n      images,\n      score: 0,\n      topScore: 0,\n      imageClicked: [],\n      message: \"Click on an image to earn points, but don't click on any more than once!\"\n    };\n    this.startGame = this.startGame.bind(this);\n    console.log(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, \"Clicky Game!\"), /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, this.state.message), /*#__PURE__*/React.createElement(\"h3\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }\n    }, \"Score: \", this.state.score), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Top Score: \", this.state.topScore), /*#__PURE__*/React.createElement(\"div\", {\n      id: \"images\",\n      className: \"design\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, images.map(image => /*#__PURE__*/React.createElement(\"img\", {\n      src: image.url,\n      id: image.id,\n      alt: image.name,\n      key: image.id,\n      width: \"200\",\n      height: \"200\",\n      onClick: this.startGame,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bhoraniya/clickygame/clickygame/src/App.js"],"names":["React","Component","images","App","constructor","imageShuffle","pictures","random","x","i","length","Math","floor","restart","setState","score","imageClicked","message","startGame","event","state","concat","target","id","indexOf","currentScore","currentTopScore","topScore","bind","console","log","render","map","image","url","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n//import logo from './logo.svg';\nimport './App.css';\nimport images from \"./images.json\"\n\nclass App extends Component {\n\n  constructor() {\n    super();\n    this.state = {\n      images,\n      score: 0,\n      topScore: 0,\n      imageClicked: [],\n      message: \"Click on an image to earn points, but don't click on any more than once!\"\n    }\n    this.startGame = this.startGame.bind(this);\n    console.log(this)\n  }\n\n  imageShuffle = (pictures) => {\n    var random;\n    var x;\n    for (var i = pictures.length-1; i > 0; i--) {\n      random = Math.floor(Math.random() * (i + 1));\n      x = pictures[i];\n      pictures[i] = pictures[random];\n      pictures[random] = x;\n    }\n    return pictures;\n  }\n\n  restart = () => {\n    this.setState({\n      score: 0,\n      imageClicked: [],\n      message: \"Oops! You've already clicked that one. Start again.\"\n    })\n  }\n\n  startGame = (event) => {\n    this.setState({\n      imageClicked: this.state.imageClicked.concat(event.target.id)\n    })\n    if (this.state.imageClicked.indexOf(event.target.id) === -1) {\n      var currentScore = this.state.score\n      currentScore++;\n      var currentTopScore = this.state.topScore\n      if (currentScore > currentTopScore) {\n        currentTopScore++;\n      }\n      this.setState({\n        topScore: currentTopScore,\n        score: currentScore,\n        message: \"Woohoo! You guessed correctly\"\n      })\n    }\n    else {\n      this.restart();\n    }\n    this.imageShuffle(images);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Clicky Game!</h1>\n        <h2>{this.state.message}</h2>\n        <h3>Score: {this.state.score}</h3>\n        <h4>Top Score: {this.state.topScore}</h4>\n        <div id=\"images\" className=\"design\">\n          {images.map(image => (\n            <img\n              src={image.url}\n              id={image.id}\n              alt={image.name}\n              key={image.id}\n              width=\"200\"\n              height=\"200\"\n              onClick={this.startGame}\n            />\n\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}